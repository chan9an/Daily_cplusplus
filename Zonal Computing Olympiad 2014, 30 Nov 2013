#include <iostream>
#include <bits/stdc++.h>
using namespace std;

#define ll long long 

int32_t main() {
	// your code goes here
	
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	
    int N ;
    cin>>N ;
    vector<int>A(N);
    for( auto &x : A )
    cin>>x ;
    
    auto dis = [&]( int a , int b )->int 
    {
      return b-a ;  
    };
    
    deque< int > q ; // monotonic queue
    
    //     out <- [ -1 ------- +1 ] <- in 
    
    vector<int>t(N);
    int k = 3 ;
    
    for( int i = 0 ; i < N ; i++ )
    {
        while( q.size() && dis( q.front() , i) > k )q.pop_front();
        
        t[i] = A[i];
        
        if( i >= k && q.size()) // i will ask for min only when my index is k or greater 
        t[i] += t[q.front()];
        
        while( q.size() && t[q.back()] > t[i] ) q.pop_back();

        q.push_back(i);
    }
   
    int mn = INT_MAX ; // min ans will come from lask k t[i]'s 
    for( int i = N-1 ; i >= 0 & i >= N-k ; i-- )
    mn = min(mn , t[i]);
    
    
    cout<<mn<<endl;
	return 0;
}
